//
// nekRS User Defined File
//
#include "udf.hpp"

#ifdef __okl__

// source the user-defined OCCA kernels
#include "hvt.oudf"

#endif

void UDF_ExecuteStep(nrs_t *nrs, dfloat time, int tstep)
{
  // print y1+ values at first timestep
  if (time == tstep)
  {
    nek::ocopyToNek(time, tstep);
    nek::userchk();
  }

  // print y1+ values at output steps
  if (nrs->isOutputStep)
  {
    nek::ocopyToNek(time, tstep);
    nek::userchk();
  }
}

void UDF_LoadKernels(occa::properties& kernelInfo)
{
}

void UDF_Setup0(MPI_Comm comm, setupAide &options)
{
}

void UDF_Setup(nrs_t* nrs)
{
  // Called once after initialising the mesh, boundary fields etc.

  mesh_t * mesh = nrs->meshV;

  // -----------------------------------------------------------
  // Initial conditions (ICs)
  // -----------------------------------------------------------

  if (platform->comm.mpiRank==0)
    printf("UDF_Setup: Setting initial conditions (ICs)\n");
  int n_gll_points = mesh->Np * mesh->Nelements;
  for (int n = 0; n < n_gll_points; ++n)
  {
    nrs->U[n + 0 * nrs->fieldOffset] = 1.0;
    nrs->U[n + 1 * nrs->fieldOffset] = 0.0;
    nrs->U[n + 2 * nrs->fieldOffset] = 0.0;
    nrs->P[n] = 0.0;
  }
}
